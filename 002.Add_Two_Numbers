/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* cur1 = l1;
        ListNode* cur2 = l2;
        ListNode* prev = NULL;
        ListNode* result = NULL;
        int carry = 0;
        while(1) {
           ListNode* newNode = new ListNode(0);
           if (cur1 && cur2) {
               int sum = cur1->val + cur2->val + carry;
               carry = sum / 10;
               newNode->val = sum % 10;
               newNode->next = NULL;
               if (prev) prev->next = newNode;
               prev = newNode;
               if (!result) result = prev;
           }
           else if (cur1) {
               int sum = cur1->val + carry;
               carry = sum / 10;
               newNode->val = sum % 10;
               newNode->next = NULL;
               if (prev) prev->next = newNode;
               prev = newNode;
               if (!result) result = prev;
           }
           else if (cur2) {
               int sum = cur2->val + carry;
               carry = sum / 10;
               newNode->val = sum % 10;
               newNode->next = NULL;
               if (prev) prev->next = newNode;
               prev = newNode;
               if (!result) result = prev;
           }
           else if (carry) {
               newNode->val = carry;
               newNode->next = NULL;
               prev->next = newNode;
               carry = 0;
           }
           else
               break;
           if (cur1) cur1 = cur1->next;
           if (cur2) cur2 = cur2->next;
       }
       return result;
    }
};
